version: '3.8'

services:
  frontend:
    image: ${ACR_REGISTRY}/${ACR_NAMESPACE}/guessing-pen-frontend:${IMAGE_TAG:-latest}
    container_name: guessing-pen-frontend-staging
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NODE_ENV=staging
      - VITE_API_URL=https://api-staging.your-domain.com
    volumes:
      - /etc/ssl/certs:/etc/ssl/certs:ro
      - /etc/ssl/private:/etc/ssl/private:ro
    networks:
      - guessing-pen-staging
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend-staging.rule=Host(`staging.your-domain.com`)"
      - "traefik.http.routers.frontend-staging.tls=true"
      - "traefik.http.services.frontend-staging.loadbalancer.server.port=80"

  api:
    image: ${ACR_REGISTRY}/${ACR_NAMESPACE}/guessing-pen-api:${IMAGE_TAG:-latest}
    container_name: guessing-pen-api-staging
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=staging
      - DB_HOST=${DB_HOST}
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_SSL=true
      - LOG_LEVEL=info
      - RATE_LIMIT_ENABLED=true
      - RATE_LIMIT_MAX=200
    networks:
      - guessing-pen-staging
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-staging.rule=Host(`api-staging.your-domain.com`)"
      - "traefik.http.routers.api-staging.tls=true"
      - "traefik.http.services.api-staging.loadbalancer.server.port=3005"

  # 监控服务
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-staging
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_staging_data:/prometheus
    networks:
      - guessing-pen-staging
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-staging
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_staging_data:/var/lib/grafana
    networks:
      - guessing-pen-staging
    restart: unless-stopped

networks:
  guessing-pen-staging:
    driver: bridge
    name: guessing-pen-staging-network

volumes:
  prometheus_staging_data:
    name: guessing-pen-prometheus-staging-data
  grafana_staging_data:
    name: guessing-pen-grafana-staging-data